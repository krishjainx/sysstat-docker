name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '28 20 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
        with:
          cosign-release: 'v2.2.4'


      # Install apko for building minimal container images
      - name: Install apko
        run: |
          curl -L https://github.com/chainguard-dev/apko/releases/download/v0.30.10/apko_0.30.10_linux_amd64.tar.gz | tar xz
          sudo mv apko_0.30.10_linux_amd64/apko /usr/local/bin/

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@bdf14dc17331d6af6f3653e7ca655ee4a136baa5
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@032a4b3bda1b716928481836ac5bfe36e1feaad6
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build container image with apko
      - name: Build with apko
        id: build-and-push
        run: |
          # Build the image and export as tarball
          apko build sysstat.alpine.apko.yaml ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} sysstat.tar
          
          # Load the image into Docker daemon
          docker load < sysstat.tar
          
          # Tag with metadata tags and push if not PR
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            # Tag with all metadata tags
            for tag in ${{ steps.meta.outputs.tags }}; do
              docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} "$tag"
              docker push "$tag"
            done
            
            # Get digest for signing
            DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} | cut -d'@' -f2)
            echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          fi


      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}
